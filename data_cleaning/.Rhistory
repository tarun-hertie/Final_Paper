names(re_pc_elec)[5] <- "re_pc_elec"
re_pc_elec$INDIC_EN <- NULL #deleting unnecessary columns
re_pc_elec$UNIT <- NULL #deleting unnecessary columns
# Share of electricity produced from renewable energy sources and the gross national electricity consumption
elec_total <- import('https://raw.githubusercontent.com/tarun-hertie/Final_Paper/master/data_raw/nrg_105a_1_total_consumption.csv')
elec_total <- elec_total[-which(elec_total$GEO == c("Euro area (19 countries)","European Union (28 countries)")),]
elec_total <- elec_total[which(elec_total$UNIT == "Gigawatt-hour"),]
elec_total[,'Value'] <- as.numeric(gsub(",", "",elec_total[,'Value'])) # gsub replaces "," in numbers to "" before converting them to numeric
names(elec_total)[6] <- "elec_total"
elec_total <- elec_total[,-(3:5),drop=FALSE]  #deleting unnecessary columns
elec_total$`Flag and Footnotes` <- NULL #deleting unnecessary columns
### INDEPENDENT VARIABLES
###Eurostat
### Energy technologies patent applications to the EPO by priority year
energy_patent <- import('https://raw.githubusercontent.com/tarun-hertie/Final_Paper/master/data_raw/patents_eu.csv')
#select the necessary columns
head(energy_patent)
energy_patent <- select(energy_patent, GEO, TIME, Value)
energy_patent[,3] <- as.numeric(energy_patent[,3])
head(energy_patent)
#treat value column as numeric + clean missing values
names(energy_patent)[3] <- "patents"
summary(energy_patent$Value)
### Long term interest rates (10 year bond yields)
interest_rates <- import('https://raw.githubusercontent.com/tarun-hertie/Final_Paper/master/data_raw/interest_rates_annual.csv')
#select the necessary columns
interest_rates <- select(interest_rates, GEO, TIME, Value)
#treat value column as numeric + clean missing values
head(interest_rates)
interest_rates[,3] <- as.numeric(interest_rates[,3])
summary(interest_rates$Value)
names(interest_rates)[3] <- "interest_rate"
#interest_rates <- subset(x = interest_rates,!is.na(Value))
#summary(interest_rates)
###OPEC
### Oil prices
oil_price <- import('https://raw.githubusercontent.com/tarun-hertie/Final_Paper/master/data_raw/crude_opec_all.csv')
#treat value column as numeric + clean missing values
oil_price[,2] <- as.numeric(oil_price[,2])
summary(oil_price $Value)
names(oil_price)[1] <- "TIME"
names(oil_price)[2] <- "oil_price"
names(oil_price)[3] <- "GEO"
head(oil_price)
### Political variable
library(foreign) # to import data from Stata
party <- read.dta('/Users/tarunkhanna/Desktop/CollaborativeDataMethods/Final_Paper/data_raw/cambridge_political.dta')
party <- select(party, countryname, sumgreen, sumright, date)
names(party)[1] <- "GEO"
names(party)[4] <- "TIME"
party[,2] <- as.numeric(party[,2])
party[,3] <- as.numeric(party[,3])
party[,4] <- substr(party[,4],1,4) # retaining on the year of the election
library(DataCombine) # to fill down data, identify and remove duplicates
FindDups(party, c("GEO","TIME")) # looking for duplicates in the database
arrange(party, GEO,TIME) # looking for duplicates
party  <- FindDups(party, c("GEO","TIME"), NotDups = TRUE) # removing duplicates in the database
### Merging the Eurostat databases
Combine_EuroStat <- merge(re_generation, elec_total, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat <- merge(Combine_EuroStat, energy_patent, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat <- merge(Combine_EuroStat, interest_rates, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat$GEO[Combine_EuroStat$GEO == "Germany (until 1990 former territory of the FRG)" ] <- "Germany"
Combine_EuroStat <- merge(Combine_EuroStat, oil_price, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat <- merge(Combine_EuroStat, party, by = c("GEO","TIME"), all.x = TRUE)
names(Combine_EuroStat)[1] <- "country"
names(Combine_EuroStat)[2] <- "year"
#treating political variable to get get a complete time series
#NOTE: It contains the support for green party in a particular election. Given that we are using annual panel
#data,I would now have to convert the data to give the information about how much support did green party have
#in a particular year, right? Which means if there was an election in 2009 and then in 2014, then
#between 2009 and 2014, I take the value as support being equal to that in 2009 and thereafter the
#value of support in 2014.
View(Combine_EuroStat)
Combine_EuroStat <- Combine_EuroStat %>% group_by(country) %>%
group_by(country) %>%
mutate(sumgreen = FillDown(Var = Combine_EuroStat$sumgreen))
Combine_EuroStat <- merge(re_generation, elec_total, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat <- merge(Combine_EuroStat, energy_patent, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat <- merge(Combine_EuroStat, interest_rates, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat$GEO[Combine_EuroStat$GEO == "Germany (until 1990 former territory of the FRG)" ] <- "Germany"
Combine_EuroStat <- merge(Combine_EuroStat, oil_price, by =c("GEO","TIME"), all.x = TRUE, all.y = TRUE)
Combine_EuroStat <- merge(Combine_EuroStat, party, by = c("GEO","TIME"), all.x = TRUE)
names(Combine_EuroStat)[1] <- "country"
names(Combine_EuroStat)[2] <- "year"
View(Combine_EuroStat)
party <- read.dta('https://cdn.rawgit.com/tarun-hertie/Final_Paper/master/data_raw/cambridge_political.dta')
install.packages('rio')
setwd('/Users/tarunkhanna/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment1)
source('data_download.R')
setwd('/Users/tarunkhanna/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment1')
source('data_download.R')
#creating var for solar and wind gen as percent of total elec consumption
re_data1$sw_pc_elec <- re_data1$re_gen/re_data1$elec_total*100
re_data_map <- re_data1[which(re_data1$year == "2013"),]
ggplot(re_data_map, aes(country, sw_pc_elec)) +
geom_bar(stat="identity", fill = "#1B9E77") +
theme_bw(base_size = 10) +
ylab("Percent consumption from solar and wind (%)\n") +
ggtitle("Proportion of electricity consumption attributable to RE in 2013\n")
ggplot(re_data_map, aes(country, sw_pc_elec)) +
geom_bar(stat="identity", fill = "#1B9E77") +
theme_bw(base_size = 10) +
xlab("\n") +
ylab("Percent consumption from solar and wind (%)\n") +
ggtitle("Proportion of electricity consumption attributable to RE in 2013\n")
ggplot(re_data_map, aes(country, sw_pc_elec)) +
geom_bar(stat="identity", fill = "#1B9E77") +
theme_bw(base_size = 10) +
xlab("\n") +
ylab("Percent consumption from solar and wind (%)\n") +
ggtitle("Proportion of electricity consumption attributable to RE in 2013\n") +
theme(axis.text.x = element_text(angle = 180))
ggplot(re_data_map, aes(country, sw_pc_elec)) +
geom_bar(stat="identity", fill = "#1B9E77") +
theme_bw(base_size = 10) +
xlab("\n") +
ylab("Percent consumption from solar and wind (%)\n") +
ggtitle("Proportion of electricity consumption attributable to RE in 2013\n") +
theme(axis.text.x = element_text(angle = 90))
# create GDP_indicator
#p <- summary(re_data1$GDP_capita) %>% as.matrix(.) %>% as.character() %>% paste(collapse = ",")
#summary(re_data$GDP_capita)
re_data1$GDP_ind <- cut(log(re_data1$GDP_capita), c(5544, 13800, 30780, 45730, 110000), labels = c("<13k", "13k-30k", "30k-45k", "45k-110k"))
# create graph
Colours <- c("#1B9E77", "#D95F02", "#7570B3",
"#E7298A", "#66A61E", "#E6AB02")
ggplot(data = re_data1,
aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = GDP_ind)) +
scale_color_manual(values = Colours) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation by income group\n") +
theme_bw(base_size = 10)
setwd("~/Desktop/CollaborativeDataMethods/Final_Paper/data_cleaning")
# Importing and cleaning data from Eurostat
source('Eurostat_and_Opec_data.R')
# Importing and cleaning data from World Bank
source('WDI_data.R')
# Merging the data
re_data <- merge(Combined_WDI,Combine_EuroStat,by = c("country", "year"), all.x = T, all.y = T)
# Remove missing values
re_data1 <- na.omit(re_data)
#creating var for solar and wind gen as percent of total elec consumption
re_data1$sw_pc_elec <- re_data1$re_gen/re_data1$elec_total*100
re_data1$GDP_ind <- cut(log(re_data1$GDP_capita), c(5544, 13800, 30780, 45730, 110000), labels = c("<13k", "13k-30k", "30k-45k", "45k-110k"))
# create graph
Colours <- c("#1B9E77", "#D95F02", "#7570B3",
"#E7298A", "#66A61E", "#E6AB02")
ggplot(data = re_data1,
aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = GDP_ind)) +
scale_color_manual(values = Colours) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation by income group\n") +
theme_bw(base_size = 10)
re_data1$GDP_ind <- cut(re_data1$GDP_capita, c(5544, 13800, 30780, 45730, 110000), labels = c("<13k", "13k-30k", "30k-45k", "45k-110k"))
# create graph
Colours <- c("#1B9E77", "#D95F02", "#7570B3",
"#E7298A", "#66A61E", "#E6AB02")
ggplot(data = re_data1,
aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = GDP_ind)) +
scale_color_manual(values = Colours) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation by income group\n") +
theme_bw(base_size = 10)
# create graph
ggplot(data = re_data1,
aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = country)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation by income group\n") +
theme_bw(base_size = 10)
# create graph
ggplot(re_data1, aes(netenergy_imports, re_gen)) + geom_point(aes(colour = country)) +
theme_bw(base_size = 10) +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
# create graph for top 10
re_data1 <- re_data1[order(re_data1$year,re_data1$re_gen),] #arranging data
countries10 <- tail(re_data1,10)[1] %>% as.matrix() %>% as.character() %>% paste(collapse = "|") #finding top10
re_top10  <- filter(re_data, grepl(countries10, country)) #selecting top 10 countries by generation
ggplot(re_top10, aes(netenergy_imports, re_gen)) + geom_point(aes(colour = country)) +
theme_bw(base_size = 10)+
xlab("\n Energy Intensity (%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("\nRenewable Energy generation and Energy Intensity for top 10\n") +
theme_bw(base_size = 10)
rm(list = c("re_top10"))
# create graph
ggplot(re_data1, aes(patent, re_gen)) + geom_jitter(aes(colour = patent_ind)) +
xlab("\n") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and innovation in EU Countries\n") +
theme_bw(base_size = 10)
# create graph
ggplot(re_data1, aes(patent, re_gen)) + geom_jitter(aes(colour = country)) +
xlab("\n") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and innovation in EU Countries\n") +
theme_bw(base_size = 10)
ggplot(re_data1, aes(patents, re_gen)) + geom_jitter(aes(colour = country)) +
xlab("\n") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and innovation in EU Countries\n") +
theme_bw(base_size = 10)
ggplot(re_data1, aes(patents, re_gen)) + geom_jitter() +
xlab("\n") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and innovation in EU Countries\n") +
theme_bw(base_size = 10)
ggplot(re_data1, aes(netenergy_imports, re_gen)) + geom_point(aes(colour = country)) +
theme_bw(base_size = 10) +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
# create graph for top 10
re_data1 <- re_data1[order(re_data1$year,re_data1$re_gen),] #arranging data
countries10 <- tail(re_data1,10)[1] %>% as.matrix() %>% as.character() %>% paste(collapse = "|") #finding top10
re_top10  <- filter(re_data, grepl(countries10, country)) #selecting top 10 countries by generation
ggplot(re_top10, aes(netenergy_imports, re_gen)) + geom_point(aes(colour = country)) +
theme_bw(base_size = 10)+
xlab("\n Energy Intensity (%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("\nRenewable Energy generation and Energy Intensity for top 10\n") +
theme_bw(base_size = 10)
rm(list = c("re_top10"))
re_data_ee <- re_data1[which(re_data1$year == "2013"),]
# create graph
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) + geom_bar(aes(colour = country)) +
theme_bw(base_size = 10) +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
# create graph
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) +
geom_bar(stat="identity", fill = "#1B9E77") +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
View(re_data_ee)
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) +
geom_point(aes(colour = country)) +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
ggplot(data = re_data1, aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = GDP_ind)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation by income group\n") +
theme_bw(base_size = 10)
re_data_ee <- re_data1[which(re_data1$year == "2013"),]
# create graph
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Intensity\n") +
theme_bw(base_size = 10)
rm(list = c(re_data_ee))
View(re_data1)
library(plm) #for panel data
library(ggplot2) #for graphs using ggplot
# estimate pooled OLS model
m.pols  <- plm(sw_pc_elec  ~ log(GDP_capita) + netenergy_imports + interest_rate +  oil_price + sumgreen + poly(patents,3), data= re_data1, index=c("country", "year"), model="pooling")
summary(m.pols)
# estimate pooled OLS model
m.pols  <- plm(sw_pc_elec  ~ log(GDP_capita) + netenergy_imports + interest_rate +  oil_price + sumgreen + patents, data= re_data1, index=c("country", "year"), model="pooling")
summary(m.pols)
m.fe  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
m.fe  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
m.fe  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
m.pols  <- plm(re_gen  ~ log(GDP_capita) + netenergy_imports + interest_rate +  oil_price + sumgreen + patents, data= re_data1, index=c("country", "year"), model="pooling")
summary(m.pols)
m.fe  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
m.fe.time  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + factor(year), data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
View(re_data1)
re_data1$time<- recode (re_data1$year, "2005=1;2006=2;2007=3;
2008=4;2009=5;2010=6;2011=7;2012=8;2013=9") # adding a time trend variable
re_data1$time<- recode (re_data1$year, "2005=1;2006=2;2007=3;
2008=4;2009=5;2010=6;2011=7;2012=8;2013=9;") # adding a time trend variable
re_data1$time<- recode(re_data1$year, "2005=1;2006=2;2007=3;
2008=4;2009=5;2010=6;2011=7;2012=8;2013=9;") # adding a time trend variable
?recode
is.numeric(re_data1$year)
re_data1$time<- recode(re_data1$year, "2005"="1";"2006"="2";"2007"="3";
"2008"="4";"2009"="5";"2010"="6";"2011"="7";"2012"="8";"2013"="9";) # adding a time trend variable
re_data1$time<- recode(re_data1$year, "2005"="1";"2006"="2";"2007"="3";
"2008"="4";"2009"="5";"2010"="6";"2011"="7";"2012"="8";"2013"="9") # adding a time trend variable
re_data1$time<- recode(re_data1$year, "2005"="1","2006"="2","2007"="3",
"2008"="4","2009"="5","2010"="6","2011"="7","2012"="8","2013"="9") # adding a time trend variable
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
m.fe.timetrend  <- plm(re_gen ~ time + log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
m.fe.timetrend  <- plm(re_gen ~ time + log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time(), data= re_data1, index=c("country", "year"), model="within")
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time), data= re_data1, index=c("country", "year"), model="within")
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.timetrend
m.fe.time  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + factor(year), data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.time)
m.fe.time
summary(m.fe.time)
library(stargazer)  # for summary statistics and regression tables
stargazer(m.pols, m.fe, df = FALSE, dep.var.labels = "Renewable Energy", covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) pooled OLS (2) Fixed effects', header = F, float = F, out = "reg.html")
stargazer(m.pols, m.fe, m.fe.time, m.fe.timetrend, df = FALSE, dep.var.labels = "Renewable Energy", covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) pooled OLS (2) Fixed effects', header = F, float = F, out = "reg.html")
stargazer(m.pols, m.fe, m.fe.time, m.fe.timetrend, df = FALSE, dep.var.labels = "Renewable Energy", covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) pooled OLS (2) Fixed effects', header = F, float = F, out = "reg.html")
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen , data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.time  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + factor(year), data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.time)
library(foreign)  # for using read.dta() to open the .dta-file
library(stargazer)  # for summary statistics and regression tables
library(magrittr)  # for 'piping': more readable code
library(ggplot2)  # the ggplot2 package provides nice function for plotting
#library(dplyr)  # for data manipulation
library(car) #for recode
#library(sandwich) #for robust standard errors
#library(lmtest) #for robust standard errors
library(plm) #for panel
library(gridExtra)
```
# 1. Introduction and theory
This paper analyzes the effect of education on voter turnout. Education is a necessary tool that allows people to participate in the political process. It can be argued that education brings with it political awareness and encourages people to be more politically active. Thus education is expected to be positively related with the probability of a person voting. At an aggregate level as well, a more educated population should result in higher voter turnouts.
This theory is tested using panel data for 221 countries observed from 1945 to 2016. The ideal information to use would be the percentage of population with schooling or average years of schooling in each country. But in the given dataset the variables that contain such direct information on education are incomplete and result in too low degrees of freedom in the regression.
Therefore, the variable __percentage of total labor force with tertiary education (the highest level of educational attainment)__ is used to operationalize the level of education. Another variable, 'educ', is created that captures the _percentage of total labor force that at least has secondary education_. It is generally expected that a more educated labor force would be associated with higher voter turnout.
We thus set out a regression with the null hypothesis that __Ho : percentage of labor force with education is not correlated with voter turnout__
# 2. Research Design
To estimate the effect of education on turnouts, a pooled OLS regression is carried out. But the estimates obtained using OLS are likely to be biased as a number of _unobserved factors_ - cultural and institutional features of the country - also affect voter turnout. To control for these unobserved factors, a __fixed effects (FE)__ regression for panel data is employed.
We also _control_ for other factors that may vary with time and are therefore not controlled for by the FE estimation but are likely to be correlated with our independent variable and the dependent variable - __average GDP per capita (GDPPC)__ and __unemployment rate__. GDPPC is expected to be negatively correlated with the dependent variable and positively with our key independent variable. On the other hand unemployment is expected to be negatively related to turnout, but negatively related to level of education. The equation that we estimte is thus equivalent to: $$ \alpha + \beta1*Education + \beta2*GDPPC + \beta3*Unemployment Rate : fixed effects $$
A scatter plot of the dependent variable (Turnout)and the main independent variable (Percentage of labour force with Tertiary Education) across years is shown in _Panel A_. The two variables seem to be trending over time, which could lead to _spurious regression_ results. In order to de-trend the series, another FE model specification with a __time trend__ is also estimated.  The equation that we estimte is thus equivalent to: $$ \alpha + \beta1*Education + \beta2*GDPPC + \beta3*Unemployment Rate + time trend : fixed effects $$
##
##
##
But the variation in turnout may not be uniform over time in panel units. Some years may have markedly higher or lower turnout.  To control for such variation, time dummies for each year are added to the regression.  The equation that we estimte is thus equivalent to: $$ \alpha + \beta1*Education + \beta2*GDPPC + \beta3*Unemployment Rate + \sum_{i=2}^n Time Dummies_i : fixed effects $$
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
setwd('/Users/tarunkhanna/Dropbox/FDA')
d <- read.dta('panel.dta', convert.factors = F)
# this gives a table of variable names and labels
dataKey <- data.frame(varName=names(d), varLabel=attr(d, "var.labels"))
# this gives you a list containing all value labels
valueLabels <- attr(d, 'label.table')
# subsetting data to remove missing for dependent variables
d <- d[-which(is.na(d$vt)),  ]
d$educ = d$wdi_lfse + d$wdi_lfte
d$unna_gdppc.1 = d$unna_gdppc/1000
# pre-regression plots
p1 <- ggplot(d, aes(x=year, y=vt), width=1, height=1)+geom_point(size =0.25)+geom_smooth(method="lm",  size =.5)+xlab('Year') + ylab('Voter Turnout')+theme(panel.background = element_rect(fill = 'white', colour = 'black'))
p2 <- ggplot(d, aes(x=year, y=wdi_lfte))+geom_point(size =0.25)+geom_smooth(method="lm", size =.5) + xlim(1990, 2015)+ylab('Labor force with tertiary education (% of total)') + xlab('Year')+theme(panel.background = element_rect(fill = 'white', colour = 'black'))
grid.arrange(p1,p2, ncol=2, top = "PANEL A")
```
_Panel B_ shows the plots between the independent variables and turnout. The distribution of GDP was right-skewed and the plot showed outlying observations with stong influence. This was corrected by taking the loged value of GDP is taken. The distribution of each variable seems random. Some of the observations for Unemployment Rate may be outliers.
__Note__: For the sake of completeness, a first difference and random effects model was also estimated (resuts not shown). A fixed effects model is preferred to a first difference model as we are dealing with an unbalanced panel, with high number of N and relatively small number of T.  A fixed effects model is also preferred to a random effects model due to presence of 'entity fixed effects'. This is also confirmed by a Hausman Test.
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
p3 <- ggplot(data =d, mapping = aes(wdi_lfte, vt)) + geom_point(size = 0.25) + geom_smooth(method="lm",colour = "red",size =.5) + xlab('Labor force with tertiary education (% of total)') + ylab('Voter Turnout')+theme(panel.background = element_rect(fill = 'white', colour = 'black'))
p4 <- ggplot(data =d, mapping = aes(log(unna_gdppc.1), vt)) + geom_point(size = 0.25) + geom_smooth(method="lm",colour = "red",size =.5) + xlab('Log GDP per capita (1000$))') + ylab('Voter Turnout')+theme(panel.background = element_rect(fill = 'white', colour = 'black'))
p5 <- ggplot(data =d, mapping = aes(wdi_unempne, vt)) + geom_point(size = 0.25) + geom_smooth(method="lm",colour = "red",size =.5) + xlab('Unemployment Rate') + ylab('Voter Turnout')+theme(panel.background = element_rect(fill = 'white', colour = 'black'))
#ggplot(d) + geom_bar(aes(year, vt, fill = as.factor(year)), position = "dodge", stat = "summary", fun.y = "mean")
grid.arrange(p3,p4,p5, ncol=2, top = "PANEL B")
```
# 3. Results
The table shows results of the regressions. Contrary to expectations, coefficient on education is _negative_. The coefficient on education indicates that an increase by one percentage point in the proportion of labor force with tertiary education _over time_ is associated with decline in turnout by around 0.1 percentage points, controlling for differences across countries. But the value of the coefficient is _not statistically significant_ at the usual levels of significance. This is true under all model specifications apart from the pooled OLS model (which is biased).__Overall it appears that education, at least higher education, is not a statistically significant predictor of turnout.__
With regards to the co-variates, the coefficient of loged GDPPC is negative and statistically significant at 5-10% level of significance depending on the model specification. The coefficient of unemployment rate is negative as expected but not statistically significant in all models apart from the model specification with time dummies.
The adjusted R2 is around 0.15 for the FE model. The model with time trend incorporated does not significantly change results, the time trend is also not statistically significant. The adjusted R2 increases significantly to 0.25 when time dummies are included even though none of the dummies are statistically significant (results supressed). The substantive and statistical significance of coefficients also increases in this specification.
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE, results= "hide"}
m.pols <- plm(vt ~ wdi_lfte  + log(unna_gdppc.1) + wdi_unempne , data=d, index=c("country", "year"), model="pooling")
m.fe <- plm(vt ~ wdi_lfte  + log(unna_gdppc.1) + wdi_unempne, data=d, index=c("country", "year"), model="within")
summary(fixef(m.fe)) # to see entity dummy values
d$time<- recode (d$year, "1990=1; 1991=2;1992=3;1993=4;1994=5;1995=6;1996=7;1997=8;
1998=9;1999=10;2000=11;2001=12;2002=13;2003=14;2004=15;2005=16;2006=17;2007=18;
2008=19;2009=20;2010=21;2011=22;2012=23;2013=24;2014=25;") # adding a time trend variable
m.fe.trend <- plm(vt ~ wdi_lfte  + log(unna_gdppc.1) + wdi_unempne + time , data=d, index=c("country", "year"), model="within")
summary(m.fe.trend)
m.fe.time <- plm(vt ~ wdi_lfte  + log(unna_gdppc.1) + wdi_unempne + factor(year) , data=d, index=c("country", "year"), model="within")
summary(m.fe.time)
summary(m.fe)
summary(m.fe.timetrend)
summary(m.fe.timetrend)
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.time  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + factor(year), data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.time)
m.fe.time  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + factor(year), data= re_data1, index=c("country", "year"), model="pooling")
summary(m.fe.time)
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents  + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + time + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
m.fe.timetrend
m.fe
m.fe  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
m.fe.time
setwd("~/Desktop/CollaborativeDataMethods/Final_Paper")
# Importing and cleaning data from Eurostat
source('Eurostat_and_Opec_data.R')
data_cleaning
setwd("~/Desktop/CollaborativeDataMethods/Final_Paper/data_cleaning")
# Importing and cleaning data from Eurostat
source('Eurostat_and_Opec_data.R')
# Importing and cleaning data from World Bank
source('WDI_data.R')
# Merging the data
re_data <- merge(Combined_WDI,Combine_EuroStat,by = c("country", "year"), all.x = T, all.y = T)
# Remove missing values
re_data1 <- na.omit(re_data)
#creating var for solar and wind gen as percent of total elec consumption
re_data1$sw_pc_elec <- re_data1$re_gen/re_data1$elec_total*100
## DEPENDANT VAR 1
#re_data2 <- re_data1[-which(re_data1$country == "Luxembourg"),]
# estimate panel fixed effects
m.fe.regen  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe)
summary(sumgreen)
summary(m.fe.regen)
re_data1$time<- recode(re_data1$year, "2005"="1","2006"="2","2007"="3",
"2008"="4","2009"="5","2010"="6","2011"="7","2012"="8","2013"="9") # adding a time trend variable
m.fe.timetrend  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen + time, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.timetrend)
## DEPENDANT VARIABLE 2
# estimate panel fixed effects
m.fe.swpcelec  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.swpcelec)
m.fe.time  <- plm(sw_pc_elec ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.time)
library(stargazer)  # for summary statistics and regression tables
stargazer(m.pols, m.fe.regen, m.fe.swpcelec, df = FALSE, dep.var.labels = "Renewable Energy", covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) pooled OLS (2) Fixed effects', header = F, float = F, out = "reg.html")
```
library(plm) #for panel data
library(ggplot2) #for graphs using ggplot
# estimate pooled OLS model
m.pols  <- plm(re_gen  ~ log(GDP_capita) + netenergy_imports + interest_rate +  oil_price + sumgreen + patents, data= re_data1, index=c("country", "year"), model="pooling")
library(stargazer)  # for summary statistics and regression tables
stargazer(m.pols, m.fe.regen, m.fe.swpcelec, df = FALSE, dep.var.labels = "Renewable Energy", covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) pooled OLS (2) Fixed effects', header = F, float = F, out = "reg.html")
stargazer(m.pols, m.fe.regen, m.fe.swpcelec, df = FALSE, covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) Pooled OLS (2) Fixed Effects (3) Fixed Effects', header = F, float = F, out = "reg.html")
m.fe.regen  <- plm(re_gen ~ log(GDP_capita) + netenergy_imports  + interest_rate +  oil_price + patents + sumgreen, data= re_data1, index=c("country", "year"), model="within")
summary(m.fe.regen)
stargazer(m.pols, m.fe.regen, m.fe.swpcelec, df = FALSE, covariate.labels = c('GDP per capita (constant 2000 US$)', 'Energy Imports (% of total energy)','Interest Rate', 'Oil Price'), notes = '(1) Pooled OLS (2) Fixed Effects (3) Fixed Effects', header = F, float = F, out = "reg.html")
country_effect <- data.frame(summary(fixef(m.fe))[,1],summary(fixef(m.fe))[,4])
country_effect$country <- rownames(country_effect)
names(country_effect)[1] <- "intercept"
country_effect <- data.frame(summary(fixef(m.fe.swpcelec))[,1],summary(fixef(m.fe.swpcelec))[,4])
country_effect$country <- rownames(country_effect)
names(country_effect)[1] <- "intercept"
names(country_effect)[2] <- "pvalue"
country_effect$prop_intercept <- country_effect$intercept/min(country_effect$intercept) #calculating FE of each country relative to min
#country_effect$SignificanceLevel <- cut(country_effect$pvalue, c(-1, 0.01, 0.05, 0.1, 1), labels = c("1%", "5%", "10%", "Not significant"))
country_effect <- arrange(country_effect,prop_intercept)
countries10 <- tail(country_effect,10)[3] %>% as.matrix() %>% as.character() %>% paste(collapse = "|") #finding top10
country_effect10  <- filter(country_effect, grepl(countries10, country)) #selecting top 10 countries by fixed effect
# graphing relative FE
ggplot(data = country_effect10) + aes(country,prop_intercept) + geom_bar(stat = "identity") + coord_cartesian(ylim = c(1,1.75)) +  xlab("\n Country") +
ylab(" ") +
ggtitle("Proportionate Country Effect relative to minimum\n") +
theme_bw(base_size = 10)
vif(m.pols) # testing for collinearity
library(tseries) # The Dickey-Fuller for unit roots
Panel.set <- plm.data(re_data1, index = c("country", "year")) # The Dickey-Fuller for unit roots
adf.test(Panel.set$vt, k=2) # The Dickey-Fuller for unit roots
plmtest(m.pols, type=("bp")) # to test for panel effect
m.re <- plm(re_gen  ~ log(GDP_capita) + netenergy_imports + poly(patents,3) + interest_rate +  oil_price, data= re_data1, index=c("country", "year"), model="random")
phtest(m.fe.swpcelec, m.re) # Hausman test for fixed effects
m.re <- plm(re_gen  ~ log(GDP_capita) + netenergy_imports + patents + interest_rate +  oil_price, data= re_data1, index=c("country", "year"), model="random")
phtest(m.fe.swpcelec, m.re) # Hausman test for fixed effects
m.re <- plm(re_gen  ~ log(GDP_capita) + netenergy_imports + patents + interest_rate +  oil_price + sumgreen, data= re_data1, index=c("country", "year"), model="random")
phtest(m.fe.swpcelec, m.re) # Hausman test for fixed effects
bptest(vt ~ log(GDP_capita) + netenergy_imports + patents + interest_rate +  oil_price + sumgreen, data = d, studentize=F) #Breusch-Pagan test for heteroskedasticity
library(lmtest) #Breusch-Pagan test for heteroskedasticity
bptest(vt ~ log(GDP_capita) + netenergy_imports + patents + interest_rate +  oil_price + sumgreen, data = d, studentize=F) #Breusch-Pagan test for heteroskedasticity
bptest(vt ~ log(GDP_capita) + netenergy_imports + patents + interest_rate +  oil_price + sumgreen, data = re_data1, studentize=F) #Breusch-Pagan test for heteroskedasticity
bptest(sw_pc_elec ~ log(GDP_capita) + netenergy_imports + patents + interest_rate +  oil_price + sumgreen, data = re_data1, studentize=F) #Breusch-Pagan test for heteroskedasticity
c1 <- coeftest(m.fe.swpcelec)      # Original coefficients
c2 <- coeftest(m.fe.swpcelec, vcovHC) # Heteroskedasticity consistent coefficients
c3 <- coeftest(m.fe.swpcelec, vcovHC(m.fe.time, method = "arellano")) # Heteroskedasticity consistent coefficients (Arellano)
d <- c(c1,c2,c3)
d
c1
c2
c3
?vif
library(car) :: vif(m.pols) # testing for collinearity
c3 <- coeftest(m.fe.swpcelec, vcovHC(m.fe.swpcelec, method = "arellano")) # Heteroskedasticity consistent coefficients (Arellano)
c3
table(re_data1$country)
