numeric <- c(1,2,3,4,5)
logical <- c(T,F,F,F,T)
factor <- factor("Apple","Orange","Apple","Orange","Lemon")
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
is.character(combined_df$factor)
?factor
factor <- factor(character)
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
boxplot(ToothGrowth$dose, ToothGrowth$len)
ToothGrowth <- data.matrix(ToothGrowth)
install.packages("heatmaply")
library(heatmaply)
heatmaply(ToothGrowth, k_col = 2, k_row = 3) %>% layout(margin = list(l = 130, b = 40))
heatmaply(ToothGrowth) %>% layout(margin = list(l = 130, b = 40))
install.packages("heatmaply")
install.packages("heatmaply")
library(heatmaply)
heatmaply(ToothGrowth) %>% layout(margin = list(l = 130, b = 40))
ls()
rm(list=ls()) # remove existing lists
library(WDI)
install.packages('WDI')
library(WDI)
fert_cons <- WDI(indicator = 'AG.CON.FERT.ZS')
food_produc <- WDI(indicator = 'AG.PRD.FOOD.XD')
View(fert_cons)
View(food_produc)
View(fert_cons)
names(fert_cons)
names(fert_cons, food_produc)
names(food_produc)
combined <- merge(fert_cons,food_produc, by=c('iso2c','year'))
View(combined)
View(fert_cons)
head(combined, n=5)
?rename
??rename
library(plyr)
library(plyr)
rename(combined, c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc'))
head(combined, n=5)
combined <- rename(combined, c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc'))
head(combined, n=5)
library(dplyr)
fert_cons <- WDI(indicator = 'AG.CON.FERT.ZS') %>% select(-country)
food_produc <- WDI(indicator = 'AG.PRD.FOOD.XD')
names(fert_cons)
names(food_produc)
head(combined, n=5)
combined <- merge(fert_cons,food_produc, by=c('iso2c','year'))
head(combined, n=5)
library(plyr)
combined <- rename(combined, c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc','country.x'='country'))
head(combined, n=5)
combined <- rename(combined, c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc'))
head(combined, n=5)
fert_cons <- WDI(indicator = 'AG.CON.FERT.ZS') %>% select(-country)
food_produc <- WDI(indicator = 'AG.PRD.FOOD.XD')
combined <- merge(fert_cons,food_produc, by=c('iso2c','year'))
head(combined, n=5)
combined <- rename(combined, c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc'))
combined <- rename('combined', c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc'))
combined <- rename(combined, c('AG.CON.FERT.ZS'='fert_cons','AG.PRD.FOOD.XD'='food_produc'))
# library(plyr) rename(df,c('foo'='samples'))
head(combined, n=5)
combined <- rename(combined, c('AG.CON.FERT.ZS'='fert_cons'))
combined <- rename(combined, c('AG.CON.FERT.ZS' = 'fert_cons','AG.PRD.FOOD.XD' = 'food_produc'))
library(plyr)
combined <- rename(combined, c('AG.CON.FERT.ZS' = 'fert_cons','AG.PRD.FOOD.XD' = 'food_produc'))
#Downloading data set for exercise 1
alc <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/alcohol-consumption/drinks.csv')
#Downloading data set for exercise 2
mrg <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/marriage/both_sexes.csv')
#mrg <- rename(mrg, c("White_2534"="White", "Black_2534"="Black", "Hisp_2534" = "Hispanic"))
p3 <- ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
library(ggplot2)
p3 <- ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
```{r, include=T, message=F, warning=FALSE, error=FALSE, echo=FALSE}
source('data_download.R')
```
## Exercise 1 -  Alcohol Consumption across the World
This exercise deals with the analysis of data on consumption of alcohol per person across the world. The analysis has been performed on data provided by the World Health Organisation, Global Information System on Alcohol and Health (GISAH), 2010)
According to the data, beer was the drink of choice in 2010.The average consumption (per person in units of serving) of different forms of alcohol - beer, wine and spirits - was:
```{r, include=T, message=F, warning=FALSE, error=FALSE, echo=FALSE}
for (i in 2:4) {
alc[,i] %>%
mean() %>%
round(,digits = -2) %>%
paste0(names(alc)[i],"  ",.,'\n') %>%
cat()
}
```
But the consumption of alcohol varies across countries. The histograms of beer, wine and spirit consumption show that in a large number of the countries the consumption of is much lower than the average.
```{r, include=T, message=F, warning=FALSE, error=FALSE, echo=FALSE}
par(mfrow=c(2,2))
hist(alc$beer_servings, xlab = 'Consuption per person', ylab = 'No. of countries', main = 'Consumption Pattern of Beer')
hist(alc$wine_servings, xlab = 'Consuption per person', ylab = 'No. of countries', main = 'Consumption Pattern of Wine')
hist(alc$spirit_servings, xlab = 'Consuption per person', ylab = 'No. of countries', main = 'Consumption Pattern of Spirits')
s1 <- summary(alc$beer_servings)
```
The average consumption of alcohol of any kind across all countries is `r mean(alc$total_litres_of_pure_alcohol)`
Similar trend is seen for overall consumption of all three kinds of alcohol wherein the consumption is much lower than the average for a large number of countries.
```{r, include=T, message=F, warning=FALSE, error=FALSE, echo=FALSE}
hist(alc$total_litres_of_pure_alcohol,xlab = 'Consuption per person', ylab = 'No. of countries', main = 'Consumption Pattern of Alcohol'))
```
For example, a closer look at the data reveals that the while the average beer consumption across all countries in 2010 was `r s1[4]`, it varied from `r s1[1]` to a maximum of `r s1[6]`. In most countries the consumption per person was only `r s1[3]`.
#### _Top 10 countries by consumption_
```{r, include=T, message=F, warning=FALSE, error=FALSE, echo=FALSE}
Top10_Beer <- alc[order(alc$beer_servings),]%>% top_n(n=10) %>% .[,c(1,2)]
Top10_Wine <- alc[order(alc$wine_servings),]%>% top_n(n=10) %>% .[,c(1,4)]
Top10_Spirits <- alc[order(alc$spirit_servings),]%>% top_n(n=10) %>% .[,c(1,3)]
l <- cbind(Top10_Spirits,Top10_Beer,Top10_Wine)
l
```
Further, the top 10 beer consuming countries same to be the same as top 10 consumers of wine and other spirits though the ranking differs with the choice of drink. While `r l[10,5]` has the highest consumption of  Wine, `r l[10,1]` has the highest consumption of Spirits.
## Exercise 2
This exercise analyses data on marriage trends in the US from 1960 to 2000. The results are based on analysis of the Decennial Census (years 1960 to 2000) and American Community Survey (years 2001-2012)
A preliminary look at the data indicates that the proportion of men and women who never marry has been increasing in the US and has reached almost reached 50%.
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
library(ggplot2)
ggplot(data = mrg, mapping = aes(year, all_2534)) + geom_line()+xlab('year') + ylab('% people who never married')
```
The rate of marriage varies across race. The average proportion (over time) of people who never married for each racial group is given below:
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
library(dplyr)
for (i in 10:12) {
mrg[,i] %>%
mean() %>%
round(.,2) %>%
paste0("The mean for ",names(mrg)[i], " is ",.,'\n') %>%
cat()
}
```
A black person is thus most likely to have never got married. The trend is stable across time as can be seen from the graph below. A similar trend is seen for poor vs. rich people.
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
p1 <- ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,10], colour = "White")) + geom_line(aes(y= mrg[,11], colour = "Black")) + geom_line(aes(y= mrg[,12], colour = "Hispanic")) + xlab('year') + ylab('% people who never married')
p2 <- ggplot(data = mrg, aes(year)) +geom_line(aes(y= mrg[,21], colour = "Rich"))   + geom_line(aes(y= mrg[,19], colour = "Poor"))+  geom_line(aes(y= mrg[,20], colour = "Middle Income"))+ xlab('year') + ylab('% people who never married')
library(gridExtra)
grid.arrange(p1,p2, ncol=2, top = "Marriage trends across Socio-Economic groups in the US")
```
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
p3 <- ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
```
source('data_download.R')
source('data_download.R')
source('data_download.R')
source('data_download.R')
library(rio)
library(plyr)
library(dplyr)
#Downloading data set for exercise 1
alc <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/alcohol-consumption/drinks.csv')
#Downloading data set for exercise 2
mrg <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/marriage/both_sexes.csv')
#mrg <- rename(mrg, c("White_2534"="White", "Black_2534"="Black", "Hisp_2534" = "Hispanic"))
library(ggplot2)
ggplot(data = mrg, mapping = aes(year, all_2534)) + geom_line()+xlab('year') + ylab('% people who never married')
```
The rate of marriage varies across race. The average proportion (over time) of people who never married for each racial group is given below:
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
library(dplyr)
for (i in 10:12) {
mrg[,i] %>%
mean() %>%
round(.,2) %>%
paste0("The mean for ",names(mrg)[i], " is ",.,'\n') %>%
cat()
}
```
A black person is thus most likely to have never got married. The trend is stable across time as can be seen from the graph below. A similar trend is seen for poor vs. rich people.
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,10], colour = "White")) + geom_line(aes(y= mrg[,11], colour = "Black")) + geom_line(aes(y= mrg[,12], colour = "Hispanic")) + xlab('year') + ylab('% people who never married')
ggplot(data = mrg, aes(year)) +geom_line(aes(y= mrg[,21], colour = "Rich"))   + geom_line(aes(y= mrg[,19], colour = "Poor"))+  geom_line(aes(y= mrg[,20], colour = "Middle Income"))+ xlab('year') + ylab('% people who never married')
```
```{r include=T, message=F, echo=FALSE, warning=FALSE, error=FALSE}
p3 <- ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
```
p3 <- ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
ggplot(data = mrg, aes(year)) +geom_line(aes(y= mrg[,21], colour = "Rich"))   + geom_line(aes(y= mrg[,19], colour = "Poor"))+  geom_line(aes(y= mrg[,20], colour = "Middle Income"))+ xlab('year') + ylab('% people who never married')
```
ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
ggplot(data = mrg, aes(year)) +geom_line(aes(y= mrg[,21], colour = "Rich"))   + geom_line(aes(y= mrg[,19], colour = "Poor"))+  geom_line(aes(y= mrg[,20], colour = "Middle Income"))+ xlab('year') + ylab('% people who never married') + geom_smooth(method=lm)
ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
mrg$year_pre1990  <- 1 if mrg$year > 1990
ggplot(data = mrg, aes(year)) +geom_line(aes(y= mrg[,21], colour = "Rich"))   + geom_line(aes(y= mrg[,19], colour = "Poor"))+  geom_line(aes(y= mrg[,20], colour = "Middle Income"))+ xlab('year') + ylab('% people who never married')
ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,10], colour = "White")) + geom_line(aes(y= mrg[,11], colour = "Black")) + geom_line(aes(y= mrg[,12], colour = "Hispanic")) + xlab('year') + ylab('% people who never married')
mrg$diff  <- mrg[,22] - mrg[,23]
mrg$diff
plot(mrg[,22], mrg[,23])
split(mrg[,22], mrg[,23]) %>% boxplot()
split(mrg[,22], mrg[,23]) %>% boxplot()
dummy <- as.numeric(mrg$year == 1957)
dummy
dummy2 <- as.numeric(year >= 1990)
dummy <- as.numeric(mrg$year == 1990)
dummy
dummy <- as.numeric(mrg$year > 1990)
dummy
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,22], colour = "work"))  +
geom_line(aes(y= mrg[,23], colour = "nowork")) + xlab('year') + ylab('% people who never married')
mrg$dummy <- as.numeric(mrg$year > 1990)
View(mrg)
split(mrg$diff, mrg$dummy) %>% boxplot
split(mrg$diff, mrg$dummy) %>% boxplot()
View(mrg)
#install.packages('rio')
library(rio)
library(plyr)
library(dplyr)
#Downloading data set for exercise 1
alc <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/alcohol-consumption/drinks.csv')
#Downloading data set for exercise 2
mrg <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/marriage/both_sexes.csv')
View(mrg)
names(mrg)
ggplot(data = mrg, aes(year)) +geom_line(aes(y= mrg[,21], colour = "Rich"))   + geom_line(aes(y= mrg[,19], colour = "Poor"))+  geom_line(aes(y= mrg[,20], colour = "Middle Income"))+ xlab('year') + ylab('% people who never married')
ggplot(data = mrg, aes(year)) + geom_line(aes(y= mrg[,10], colour = "White")) + geom_line(aes(y= mrg[,11], colour = "Black")) + geom_line(aes(y= mrg[,12], colour = "Hispanic")) + xlab('year') + ylab('% people who never married')
mrg$dummy <- as.numeric(mrg$year > 1990)
mrg$diff  <- mrg[,11] - mrg[,10]
split(mrg$diff, mrg$dummy) %>% boxplot(.,xlab= "years after 1990", ylab ='Difference in marriage rates of employed and unemployed)
```
split(mrg$diff, mrg$dummy) %>% boxplot(,xlab= "years after 1990", ylab ='Difference in marriage rates of employed and unemployed)
split(mrg$diff, mrg$dummy) %>% boxplot()
split(mrg$diff, mrg$dummy) %>% boxplot()
split(mrg$diff, mrg$dummy) %>% boxplot(, xlab ='year')
split(mrg$diff, mrg$dummy) %>% boxplot(,xlab ='year')
split(mrg$diff, mrg$dummy) %>% boxplot(.,xlab ='year')
split(mrg$diff, mrg$dummy) %>% boxplot(.,ylab='difference in never married rates','xlab ='year')
split(mrg$diff, mrg$dummy) %>% boxplot(.,ylab='difference in never married rates',xlab ='year')
install.packages(rvest)
library(rvest)
library('rvest')
install.packages('rvest')
library(rvest)
library(dplyr)
library(dplyr)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# Get and parse expenses_table from the webpage
MedalsTable <- URL
library(dplyr)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# Get and parse expenses_table from the webpage
MedalsTable <- URL
MedalsTable <- URL %>% read_html() %>%
html_node('#medals-table__table) %>%
html_table() %>%
as.data.frame
dd
dascdsacds
MedalsTable <- URL %>% read_html() %>%
html_node('#medals-table__table) %>%
html_table() %>%
as.data.frame
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
library(rvest)
library(dplyr)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# Get and parse expenses_table from the webpage
MedalsTable <- URL %>% read_html() %>%
html_node('#medals-table__table) %>%
html_table() %>%
as.data.frame
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
# Get and parse expenses_table from the webpage
MedalsTable <- URL %>% read_html() %>%
html_node('#medals-table__table') %>%
html_table() %>%
as.data.frame
install.packages('XML')
MedalsTable <- URL %>% read_html() %>%
html_node('#medals-table__table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_nodes('#medals-table__table') %>%
html_table() %>%
as.data.frame
URL %>% read_html() %>%
html_nodes('#medals-table__table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_node('#medals-table__table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URL %>% read_html() %>%
html_node('.medals-table__table')
MedalsTable <- URL %>% read_html() %>%
html_node('.medals-table__table') %>%
html_table()
MedalsTable <- URL %>% read_html() %>%
html_node('.medals-table__table') %>%
html_table() %>%
as.data.frame
View(MedalsTable)
View(MedalsTable)
MedalsTable[ ,c(1:6)]
MedalsTable <- MedalsTable[ ,c(1:6)]
View(MedalsTable)
names(MedalsTable)
library(plyr)
rename(MedalsTable, c("" = "Bronze",".1" = "Silver",".2" = "Gold" ))
Ascending <- arrange(MedalsTable, Total)
head(MedalsTable, count = 3)
Ascending <- arrange(MedalsTable, "Total")
head(Ascending, count = 3)
tail(Ascending, count =3)
Descendin <- arrange(MedalsTable, desc("Total"))
Descending <- arrange(MedalsTable, desc(Total))
head(Descending, count=3)
MedalsTable <- URL %>% read_html() %>%
html_node('.medals-table__table') %>%
#importing using class of table. in this case don't use "#", use "." instead
html_table() %>%
as.data.frame
Ascending <- arrange(MedalsTable, Total)
rename(MedalsTable, c("" = "Bronze",".1" = "Silver",".2" = "Gold" ))
MedalsTable1 <- URL %>% read_html() %>%
html_node('table') %>%
#importing using class of table. in this case don't use "#", use "." instead
html_table() %>%
as.data.frame
medals <- c("", ".1",".2" )
medals <- c("", ".1",".2" )
names(MedalsTable) <- c("Bronze", "Silver","Gold")
View(MedalsTable)
"",
medals <- select(MedalsTable,.1,.2 )
names(MedalsTable)
URL <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
#Method 2
MedalsTable <- URL %>% read_html() %>%
html_node('table') %>%
#importing using the
html_table() %>%
as.data.frame
View(MedalsTable)
names(MedalsTable)
View(MedalsTable)
names(MedalsTable)[3] <- "Gold"
names(MedalsTable)
View(MedalsTable)
names(MedalsTable)[3] <- "Gold"3
source('Eurostat_and_Opec_data.R')
setwd(Users/tarunkhanna/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment3/data_cleaning)
setwd('Users/tarunkhanna/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment3/data_cleaning')
setwd()
setwd("Users/tarunkhanna/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment3/data_cleaning")
list.dirs()
getwd()
setwd('Users/tarunkhanna/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment3')
# Importing and cleaning data from Eurostat
source('Eurostat_and_Opec_data.R')
# Importing and cleaning data from World Bank
source('WDI_data.R')
# Merging the data
re_data <- merge(Combined_WDI,Combine_EuroStat,by = c("country", "year"), all.x = T, all.y = T)
# Remove missing values
re_data1 <- na.omit(re_data)
setwd("~/Desktop/CollaborativeDataMethods/VieiraKhanna_Assignment3/data_cleaning")
# Importing and cleaning data from Eurostat
source('Eurostat_and_Opec_data.R')
# Importing and cleaning data from World Bank
source('WDI_data.R')
# Merging the data
re_data <- merge(Combined_WDI,Combine_EuroStat,by = c("country", "year"), all.x = T, all.y = T)
# Remove missing values
re_data1 <- na.omit(re_data)
#creating var for solar and wind gen as percent of total elec consumption
re_data1$sw_pc_elec <- re_data1$re_gen/re_data1$elec_total*100
re_data_map <- re_data1[which(re_data1$year == "2013"),]
setwd("~/Desktop/CollaborativeDataMethods/Final_Paper/data_cleaning")
# Importing and cleaning data from Eurostat
source('Eurostat_and_Opec_data.R')
# Importing and cleaning data from World Bank
source('WDI_data.R')
# Merging the data
re_data <- merge(Combined_WDI,Combine_EuroStat,by = c("country", "year"), all.x = T, all.y = T)
# Remove missing values
re_data1 <- na.omit(re_data)
#creating var for solar and wind gen as percent of total elec consumption
re_data1$sw_pc_elec <- re_data1$re_gen/re_data1$elec_total*100
re_data_ee <- aggregate(re_data1$re_gen, list(re_data1$year), FUN=average)
re_data_ee <- aggregate(re_data1$re_gen, list(re_data1$year), FUN=mean)
View(re_data_ee)
View(re_data_ee)
re_data_ee$re_gen <- aggregate(re_data1$re_gen, list(re_data1$year), FUN=mean)
re_data_ee$netenergy_imports <- aggregate(re_data1$netenergy_imports, list(re_data1$year), FUN=mean)
View(re_data_ee)
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports in 2013\n") +
theme_bw(base_size = 10)
library(ggplot2)
# create graph
ggplot(re_data_ee, aes(netenergy_imports, re_gen)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports in 2013\n") +
theme_bw(base_size = 10)
ggplot(re_data_ee, aes(netenergy_imports.x, re_gen.x)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports in 2013\n") +
theme_bw(base_size = 10)
View(re_data_ee)
re_data_ee$re_gen <- aggregate(re_data1$re_gen, list(re_data1$country), FUN=mean)
re_data_ee$netenergy_imports <- aggregate(re_data1$netenergy_imports, list(re_data1$country), FUN=mean)
View(re_data_ee)
rm(list = c('re_data_ee'))
re_data_ee$re_gen <- aggregate(re_data1$re_gen, list(re_data1$country), FUN=mean)
re_gen <- aggregate(re_data1$re_gen, list(re_data1$country), FUN=mean)
netenergy_imports <- aggregate(re_data1$netenergy_imports, list(re_data1$country), FUN=mean)
View(re_gen)
data.frame(re_gen,netenergy_imports)
re_data_ee <- data.frame(re_gen,netenergy_imports)
ggplot(re_data_ee, aes(x.1, x)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports in 2013\n") +
theme_bw(base_size = 10)
ggplot(re_data1, aes(netenergy_imports, re_gen)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (TWh)\n") +
ggtitle("Average of Renewable Energy generation and Energy Imports\n") +
theme_bw(base_size = 10)
intensity <- ggplot(re_data1, aes(netenergy_imports, re_gen)) +
geom_point() +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports\n") +
theme_bw(base_size = 10)
library(plotly)
ggplotly(intensity)
ggplot(data = re_data1, aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = GDP_ind)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and GDP per capita\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
re_data1$GDP_ind <- cut(re_data1$GDP_capita, c(5544, 13800, 30780, 45730, 110000), labels = c("<13k", "13k-30k", "30k-45k", "45k-110k"))
# create graph
ggplot(data = re_data1, aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = GDP_ind)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and GDP per capita\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
ggplot(data = re_data1, aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = country)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and GDP per capita\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
gdp <- ggplot(data = re_data1, aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = country)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and GDP per capita\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
library(plotly)
ggplotly(gdp)
ggplot(data = re_data1, aes(GDP_capita,re_gen)) +
geom_jitter(aes(colour = country)) +
xlab("\nGDP per capita (USD)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and GDP per capita\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
intensity <- ggplot(re_data1, aes(netenergy_imports, re_gen)) +
geom_point(aes(colour=country)) +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
ggplot(re_data1, aes(netenergy_imports, re_gen)) +
geom_point(aes(colour=country)) +
xlab("\n Energy Intensity(%)") +
ylab("RE Generation (GWh)\n") +
ggtitle("Renewable Energy generation and Energy Imports\n") +
theme_bw(base_size = 10)+
guides(colour=FALSE)
